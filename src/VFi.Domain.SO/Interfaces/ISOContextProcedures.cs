// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using VFi.Domain.SO.Models;
using VFi.NetDevPack.Domain;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace VFi.Domain.SO.Interfaces
{
    public partial interface ISOContextProcedures
    {
        Task<List<SP_GET_TOTAL_COSTESTIMATE_Result>> SP_GET_TOTAL_COSTESTIMATEAsync(string? ListProductOrderDetailId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_DB_COUNT_CUSTOMERResult>> SP_DB_COUNT_CUSTOMERAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        
        Task<List<SP_DB_OVERVIEWResult>> SP_DB_OVERVIEWAsync(string Currency, DateTime? StartDate, DateTime? EndDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_DB_SELLING_PRODUCTResult>> SP_DB_SELLING_PRODUCTAsync(string Currency, DateTime? StartDate, DateTime? EndDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_DB_CUSTMER_SALEResult>> SP_DB_CUSTMER_SALEAsync(string Currency, DateTime? StartDate, DateTime? EndDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_DB_STORE_SALEResult>> SP_DB_STORE_SALEAsync(string Currency, DateTime? StartDate, DateTime? EndDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_DB_SALESCHANNEL_SALEResult>> SP_DB_SALESCHANNEL_SALEAsync(string Currency, DateTime? StartDate, DateTime? EndDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_DB_SALES_PRODUCT_BY_TIME>> SP_DB_SALES_PRODUCT_BY_TIME(string Currency, DateTime Yaer, int Type, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_DB_CONTRACT>> SP_DB_CONTRACT(string Currency, DateTime? StartDate, DateTime? EndDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_DB_EMPLOYEE_EXCELLENT>> SP_DB_EMPLOYEE_EXCELLENT(string Currency, DateTime? StartDate, DateTime? EndDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_DB_PAYMENT>> SP_DB_PAYMENT(string Currency, DateTime? StartDate, DateTime? EndDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SP_Rpt_SoChiTietBanHang_LoadDataAsync(Guid? ReportId, string CustomerCode, string EmployeeId, string CategoryRootId, string ProductCode, DateTime? FromDate, DateTime? ToDate, int? Status, int? DiferenceStatus, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SP_Rpt_TongHopBanHangTheoKhachHang_LoadDataAsync(Guid? ReportId, string CustomerCode, string EmployeeId, string CategoryRootId, string ProductCode, DateTime? FromDate, DateTime? ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SP_Rpt_TongHopBanHangTheoMatHang_LoadDataAsync(Guid? ReportId, string CustomerCode, string EmployeeId, string CategoryRootId, string ProductCode, DateTime? FromDate, DateTime? ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SP_Rpt_TinhHinhThucHienDonBanHang_LoadDataAsync(Guid? ReportId, string CustomerCode, string EmployeeId, string CategoryRootId, string ProductCode, DateTime? FromDate, DateTime? ToDate, int? Status, int? DiferenceStatus, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SP_Rpt_TinhHinhThucHienHopDongBan_LoadDataAsync(Guid? ReportId, string CustomerCode, string EmployeeId, string CategoryRootId, string ProductCode, DateTime? FromDate, DateTime? ToDate, int? Status, int? DiferenceStatus, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SP_Rpt_TongHopBanHangTheoNhanVien_LoadDataAsync(Guid? ReportId, string CustomerCode, string EmployeeId, string CategoryRootId, string ProductCode, DateTime? FromDate, DateTime? ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SP_Rpt_TongHopBanHangTheoNhomKhachHang_LoadDataAsync(Guid? ReportId, string EmployeeId, string CustomerGroupId, DateTime? FromDate, DateTime? ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SP_Rpt_TongHopBanHangTheoKhachHangVaDonBanHang_LoadDataAsync(Guid? ReportId, string CustomerCode, string EmployeeId, string CategoryRootId, string ProductCode, DateTime? FromDate, DateTime? ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SP_Rpt_TongHopBanHangTheoMatHangVaKhachHang_LoadDataAsync(Guid? ReportId, string CustomerCode, string EmployeeId, string CategoryRootId, string ProductCode, DateTime? FromDate, DateTime? ToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SP_CROSS_ORDER_RECALCULATE_PRICEAsync(Guid? id, Guid? userId, string userName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<SP_ORDER_CROSS_RECALCULATED_PRICEResult> SP_GET_CROSS_ORDER_RECALCULATE_PRICEAsync(Guid? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
