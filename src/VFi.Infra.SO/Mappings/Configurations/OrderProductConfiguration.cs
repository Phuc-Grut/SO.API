// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using VFi.Domain.SO.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace VFi.Infra.SO.Mappings.Configurations
{
    public partial class OrderProductConfiguration : IEntityTypeConfiguration<OrderProduct>
    {
        public void Configure(EntityTypeBuilder<OrderProduct> entity)
        {
            entity.ToTable("OrderProduct", "so");

            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.Property(e => e.AmountDiscount)
                .HasColumnType("money")
                .HasComment("Chiết khấu");

            entity.Property(e => e.BidUsername).HasMaxLength(150);
            entity.Property(e => e.SellerId).HasMaxLength(150);

            entity.Property(e => e.CommodityGroup)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.ContractName).HasMaxLength(250);

            entity.Property(e => e.CreatedByName).HasMaxLength(150);

            entity.Property(e => e.CreatedDate).HasColumnType("datetime");

            entity.Property(e => e.DiscountAmount).HasColumnType("money");

            entity.Property(e => e.DiscountAmountDistribution)
                .HasColumnType("money")
                .HasComment("Tiền chiết khấu phân bổ");

            entity.Property(e => e.DiscountPercent).HasComment("% Chiết khấu");

            entity.Property(e => e.DiscountTotal).HasComment("% Chiết khấu");

            entity.Property(e => e.DiscountType).HasComment("Loại chiết khấu: 0-Phần trăm, 1-Giá trị");

            entity.Property(e => e.EstimatedDeliveryDate).HasColumnType("datetime");

            entity.Property(e => e.ExpectedDate)
                .HasColumnType("datetime")
                .HasComment("Ngày nhận hàng dự kiến");

            entity.Property(e => e.Note).HasMaxLength(1000);

            entity.Property(e => e.OrderCode)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.Origin).HasMaxLength(250);

            entity.Property(e => e.PriceListName).HasMaxLength(255);

            entity.Property(e => e.ProductCode)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.ProductImage).HasMaxLength(250);

            entity.Property(e => e.ProductName)
                .IsRequired()
                .HasMaxLength(250);

            entity.Property(e => e.Quantity).HasColumnType("numeric(18, 6)");

            entity.Property(e => e.QuantityExported)
                .HasDefaultValueSql("((0))")
                .HasComment("Số lượng đã xuất");

            entity.Property(e => e.QuantityProductioned).HasComment("Số lượng đã đề nghị mua");

            entity.Property(e => e.QuantityPurchased).HasComment("Số lượng đã đề nghị mua");

            entity.Property(e => e.QuantityReturned).HasDefaultValueSql("((0))");

            entity.Property(e => e.QuantityReturnedActual).HasDefaultValueSql("((0))");

            entity.Property(e => e.QuantitySales).HasDefaultValueSql("((0))");

            entity.Property(e => e.QuotationName).HasMaxLength(250);

            entity.Property(e => e.SourceCode).HasMaxLength(127);

            entity.Property(e => e.SourceLink).HasMaxLength(510);

            entity.Property(e => e.SpecificationCode1)
                .HasMaxLength(250)
                .HasComment("Mã quy cách 1");

            entity.Property(e => e.SpecificationCode10)
                .HasMaxLength(250)
                .HasComment("Mã quy cách 10");

            entity.Property(e => e.SpecificationCode2)
                .HasMaxLength(250)
                .HasComment("Mã quy cách 2");

            entity.Property(e => e.SpecificationCode3)
                .HasMaxLength(250)
                .HasComment("Mã quy cách 3");

            entity.Property(e => e.SpecificationCode4)
                .HasMaxLength(250)
                .HasComment("Mã quy cách 4");

            entity.Property(e => e.SpecificationCode5)
                .HasMaxLength(250)
                .HasComment("Mã quy cách 5");

            entity.Property(e => e.SpecificationCode6)
                .HasMaxLength(250)
                .HasComment("Mã quy cách 6");

            entity.Property(e => e.SpecificationCode7)
                .HasMaxLength(250)
                .HasComment("Mã quy cách 7");

            entity.Property(e => e.SpecificationCode8)
                .HasMaxLength(250)
                .HasComment("Mã quy cách 8");

            entity.Property(e => e.SpecificationCode9)
                .HasMaxLength(250)
                .HasComment("Mã quy cách 9");

            entity.Property(e => e.SpecificationCodeJson).HasMaxLength(1000);

            entity.Property(e => e.Surcharge).HasColumnType("money");

            entity.Property(e => e.SurchargeGroup)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.Tax).HasMaxLength(150);

            entity.Property(e => e.TaxCode)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.UnitCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("Đơn vị tính");

            entity.Property(e => e.UnitName).HasMaxLength(50);

            entity.Property(e => e.UnitPrice)
                .HasColumnType("money")
                .HasComment("Đơn giá");

            entity.Property(e => e.UnitType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("Đơn vị tính");

            entity.Property(e => e.UpdatedByName).HasMaxLength(150);

            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");

            entity.Property(e => e.WarehouseCode)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.WarehouseName).HasMaxLength(255);

            entity.HasOne(d => d.Contract)
                .WithMany(p => p.OrderProduct)
                .HasForeignKey(d => d.ContractId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_OrderProduct_Contract");

            entity.HasOne(d => d.Order)
                .WithMany(p => p.OrderProduct)
                .HasForeignKey(d => d.OrderId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_OrderProduct_Order");

            entity.HasOne(d => d.Quotation)
                .WithMany(p => p.OrderProduct)
                .HasForeignKey(d => d.QuotationId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_OrderProduct_Quotation");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<OrderProduct> entity);
    }
}
