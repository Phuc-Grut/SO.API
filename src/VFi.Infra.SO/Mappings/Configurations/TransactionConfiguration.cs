// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using VFi.Domain.SO.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace VFi.Infra.SO.Mappings.Configurations
{
    public partial class TransactionConfiguration : IEntityTypeConfiguration<Transaction>
    {
        public void Configure(EntityTypeBuilder<Transaction> entity)
        {
            entity.ToTable("Transaction", "so");

            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.Property(e => e.AccountId)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.Amount).HasColumnType("money");

            entity.Property(e => e.AuthorizationTransactionCode)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.Property(e => e.AuthorizationTransactionId)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.Property(e => e.AuthorizationTransactionResult)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.Property(e => e.AuthorizeRef)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasComment("1,2,3");

            entity.Property(e => e.CaptureTransactionId)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.Property(e => e.CaptureTransactionResult)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.Property(e => e.Code)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.CreatedByName).HasMaxLength(255);

            entity.Property(e => e.CreatedDate)
                .HasColumnType("datetime")
                .HasDefaultValueSql("(getutcdate())");

            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.MatchingDate).HasColumnType("datetime");

            entity.Property(e => e.MetaData).HasColumnType("ntext");

            entity.Property(e => e.ObjectRef)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasComment("1,2,3");

            entity.Property(e => e.RawData).HasColumnType("ntext");

            entity.Property(e => e.RefundTransactionId)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.Property(e => e.RefundTransactionResult)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.Property(e => e.Source)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.TransactionDate).HasColumnType("datetime");

            entity.Property(e => e.TransactionRef)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.Type)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("DEPOSIT, PAY_ORDER, PAY, REFUND_FROM_CHARGE_ORDER");

            entity.Property(e => e.UpdatedByName).HasMaxLength(255);

            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");

            entity.Property(e => e.WalletId)
                .HasMaxLength(50)
                .IsUnicode(false);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Transaction> entity);
    }
}
