// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using VFi.Domain.SO.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace VFi.Infra.SO.Mappings.Configurations
{
    public partial class WalletTransactionConfiguration : IEntityTypeConfiguration<WalletTransaction>
    {
        public void Configure(EntityTypeBuilder<WalletTransaction> entity)
        {
            entity.ToTable("Wallet_Transaction", "so");

            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.Property(e => e.Amount).HasColumnType("money");

            entity.Property(e => e.ApplyDate).HasColumnType("datetime");

            entity.Property(e => e.Balance).HasColumnType("money");

            entity.Property(e => e.Code)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.CreatedByName).HasMaxLength(255);

            entity.Property(e => e.CreatedDate)
                .HasColumnType("datetime")
                .HasDefaultValueSql("(getutcdate())");

            entity.Property(e => e.Document).HasMaxLength(250);

            entity.Property(e => e.Hash)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.Property(e => e.Method)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.Note).HasMaxLength(500);

            entity.Property(e => e.PaymentInvoiceCode)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.RawData).HasColumnType("ntext");

            entity.Property(e => e.RefCode)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.RefType)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.RefundAmount).HasColumnType("money");

            entity.Property(e => e.RefundStatus).HasDefaultValueSql("((0))");

            entity.Property(e => e.Type)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("DEPOSIT, PAY_ORDER, PAY, REFUND_PAY_ORDER");

            entity.Property(e => e.UpdatedByName).HasMaxLength(255);

            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");

            entity.HasOne(d => d.Wallet)
                .WithMany(p => p.WalletTransaction)
                .HasForeignKey(d => d.WalletId)
                .HasConstraintName("FK_Wallet_Transaction_Wallet");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<WalletTransaction> entity);
    }
}
