// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using VFi.Domain.SO.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace VFi.Infra.SO.Mappings.Configurations
{
    public partial class PaymentInvoiceConfiguration : IEntityTypeConfiguration<PaymentInvoice>
    {
        public void Configure(EntityTypeBuilder<PaymentInvoice> entity)
        {
            entity.ToTable("PaymentInvoice", "so");

            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.Property(e => e.AccountName).HasMaxLength(255);

            entity.Property(e => e.Amount).HasColumnType("money");

            entity.Property(e => e.BankAccount).HasMaxLength(250);

            entity.Property(e => e.BankName).HasMaxLength(250);

            entity.Property(e => e.BankNumber)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.Calculation)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValueSql("('*')");

            entity.Property(e => e.Code)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.CreatedByName).HasMaxLength(150);

            entity.Property(e => e.CreatedDate).HasColumnType("datetime");

            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.CurrencyName).HasMaxLength(255);

            entity.Property(e => e.CustomerName).HasMaxLength(250);

            entity.Property(e => e.Description).HasMaxLength(1000);

            entity.Property(e => e.ExchangeRate).HasColumnType("decimal(18, 10)");

            entity.Property(e => e.File).HasColumnType("ntext");

            entity.Property(e => e.Locked).HasDefaultValueSql("((0))");

            entity.Property(e => e.Note).HasMaxLength(500);

            entity.Property(e => e.OrderCode)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.OrderExpressCode)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.PaymentCode)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.PaymentDate).HasColumnType("datetime");

            entity.Property(e => e.PaymentMethodCode)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.PaymentMethodId).HasComment("Điều khoản thanh toán");

            entity.Property(e => e.PaymentMethodName).HasMaxLength(255);

            entity.Property(e => e.PaymentNote).HasMaxLength(250);

            entity.Property(e => e.Type)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.UpdatedByName).HasMaxLength(150);

            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");

            entity.HasOne(d => d.OrderExpress)
                .WithMany(p => p.PaymentInvoice)
                .HasForeignKey(d => d.OrderExpressId)
                .HasConstraintName("FK_PaymentInvoice_OrderExpress");

            entity.HasOne(d => d.Order)
                .WithMany(p => p.PaymentInvoice)
                .HasForeignKey(d => d.OrderId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_PaymentInvoice_Order");

            entity.HasOne(d => d.PaymentMethod)
                .WithMany(p => p.PaymentInvoice)
                .HasForeignKey(d => d.PaymentMethodId)
                .OnDelete(DeleteBehavior.SetNull)
                .HasConstraintName("FK_PaymentInvoice_PaymentMethod");

            entity.HasOne(d => d.ReturnOrder)
                .WithMany(p => p.PaymentInvoice)
                .HasForeignKey(d => d.ReturnOrderId)
                .HasConstraintName("FK_PaymentInvoice_ReturnOrder");

            entity.HasOne(d => d.SaleDiscount)
                .WithMany(p => p.PaymentInvoice)
                .HasForeignKey(d => d.SaleDiscountId)
                .HasConstraintName("FK_PaymentInvoice_SalesDiscount");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<PaymentInvoice> entity);
    }
}
