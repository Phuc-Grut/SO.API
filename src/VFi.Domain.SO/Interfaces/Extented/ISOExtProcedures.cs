// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using VFi.Domain.SO.Models;
using VFi.Domain.SO.Models.Extented;
using VFi.NetDevPack.Domain;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace VFi.Domain.SO.Interfaces
{
    public partial interface ISOExtProcedures
    {
        Task<List<SP_ACCOUNT_REVENUE_LOADResult>> SP_ACCOUNT_REVENUE_LOADAsync(Guid? accountId, int? month, int? year, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_CREATE_CROSS_ORDERResult>> SP_CREATE_CROSS_ORDERAsync(
            Guid? id,
            string code,
            Guid? customerId,
            string orderType,
            string purchaseGroup,
            string storeCode,
            string channelCode,
            string currencyCode,
            decimal? exchangeRate,
            string paymentTermCode,
            string paymentMethodCode,
            string shippingMethodCode,
            int? buyFee,
            decimal? domesticShiping,
            string routerShipping,
            string deliveryCountry,
            string deliveryProvince,
            string deliveryDistrict,
            string deliveryWard,
            string deliveryAddress,
            string deliveryName,
            string deliveryPhone,
            string deliveryNote,
            DataTable products,
            DataTable serviceAdd,
            string image,
            string images,
            string description,
            string note,
            decimal? totalPay,
            bool? payNow,
            Guid? userId,
            string userName,
            OutputParameter<int> returnValue = null,
            CancellationToken cancellationToken = default);

        Task<List<SP_DEACTIVE_BID_WALLETResult>> SP_DEACTIVE_BID_WALLETAsync(Guid? accountId, Guid? userId, string userName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_HOLD_BID_WALLETResult>> SP_HOLD_BID_WALLETAsync(Guid? accountId, string walletCode, string code, decimal? amount, int? bidQuantity, string note, string rawData, string document, Guid? userId, string userName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_HOLD_WALLETResult>> SP_HOLD_WALLETAsync(Guid? accountId, string walletCode, string code, decimal? amount, string note, string rawData, Guid? RefId, DateTime? RefDate, string RefType, string document, Guid? userId, string userName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_REFUND_HOLD_WALLETResult>> SP_REFUND_HOLD_WALLETAsync(Guid? accountId, string walletCode, string code, Guid? refId, string note, string rawData, string document, Guid? userId, string userName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_WITHDRAW_WALLETResult>> SP_WITHDRAW_WALLETAsync(Guid? accountId, string walletCode, string code, decimal? amount, string method, string note, string rawData, string document, Guid? userId, string userName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_WITHDRAW_WALLET_APPROVEResult>> SP_WITHDRAW_WALLET_APPROVEAsync(Guid? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);

        Task<List<SP_ADD_HOLD_BID_WALLETResult>> SP_ADD_HOLD_BID_WALLETAsync(Guid? accountId, string walletCode, string code, decimal? amount, string note, Guid? userId, string userName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_REFUND_HOLD_BID_WALLETResult>> SP_REFUND_HOLD_BID_WALLETAsync(Guid? accountId, Guid? refId, string code, string note, Guid? userId, string userName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);


        Task<List<SP_GET_PRICE_PUCHASE_BY_ACCOUNT_IDResult>> SP_GET_PRICE_PUCHASE_BY_ACCOUNT_IDAsync(Guid? accountId, string? purchaseGroupCode, decimal? price, NetDevPack.Domain.OutputParameter<int>? returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_DEPOSIT_FROM_BANKResult>> SP_DEPOSIT_FROM_BANKAsync(Guid? accountId, string walletCode, decimal? amount, string paymentCode, string paymentNote, DateTime? paymentDate, string bankName, string bankAccount, string bankNumber, Guid? userId, string userName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);

        Task<List<SP_CREATE_INVOICE_PAY_ORDERResult>> SP_CREATE_INVOICE_PAY_ORDERAsync(Guid? id, decimal? totalPay, Guid? accountId, Guid? createdBy, string createdByName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_CREATE_EXPRESS_ORDERResult>> SP_CREATE_EXPRESS_ORDERAsync(
            Guid? id,
            string code,
            Guid? customerId,
            string storeCode,
            string currencyCode,
            string shippingMethodCode,
            string routerShipping,
            string trackingCode,
            string trackingCarrier,
            int? weight,
            int? width,
            int? height,
            int? length,
            string deliveryCountry,
            string deliveryProvince,
            string deliveryDistrict,
            string deliveryWard,
            string deliveryAddress,
            string deliveryName,
            string deliveryPhone,
            string deliveryNote,
            DataTable products,
            DataTable serviceAdd,
            string image,
            string images,
            string description,
            string note,
            Guid? createdBy,
            string createdByName,
            OutputParameter<int> returnValue = null,
            CancellationToken cancellationToken = default);

        Task<List<SP_ORDER_UPDATE_ADDRESSResult>> SP_ORDER_UPDATE_ADDRESSAsync(Guid? id, string deliveryCountry, string deliveryProvince, string deliveryDistrict, string deliveryWard, string deliveryAddress, string deliveryName, string deliveryPhone, string deliveryNote, Guid? userId, string userName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);

        Task<List<SP_GET_MY_INFOResult>> SP_GET_MY_INFOAsync(Guid? accountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_GET_ORDER_COUNTERResult>> SP_GET_ORDER_COUNTERAsync(Guid? customerId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_GET_ORDEREXPRESS_COUNTERResult>> SP_GET_ORDEREXPRESS_COUNTERAsync(Guid? customerId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_GET_MY_TOP_ORDERResult>> SP_GET_MY_TOP_ORDERAsync(Guid? customerId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_GET_MY_TOP_PAYMENTResult>> SP_GET_MY_TOP_PAYMENTAsync(Guid? accountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);

        Task<int> SP_CANCEL_ORDER_NO_FEEAsync(Guid? id, Guid? createdBy, string createdByName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_CANCEL_ORDER_AUCTIONResult>> SP_CANCEL_ORDER_AUCTIONAsync(Guid? id, Guid? createdBy, string createdByName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SP_CROSS_ORDER_ADD_SERVICEAsync(Guid? id, DataTable serviceAdd, Guid? userId, string userName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);

        Task<List<SP_GET_BID_CREDIT_SETUPResult>> SP_GET_BID_CREDIT_SETUPAsync(Guid? accountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);

        Task<List<SP_CREATE_INVOICE_PAY_ORDER_EXPRESSResult>> SP_CREATE_INVOICE_PAY_ORDER_EXPRESSAsync(
            Guid? id,
            decimal? totalPay,
            Guid? accountId,
            Guid? createdBy,
            string createdByName,
            OutputParameter<int> returnValue = null,
            CancellationToken cancellationToken = default);
        Task<List<SP_CREATE_INVOICE_WITHDRAWResult>> SP_CREATE_INVOICE_WITHDRAWAsync(Guid? accountId, string walletCode, decimal? amount, string method, string note, string rawData, string document, Guid? createdBy, string createdByName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);

        Task<List<SP_ORDER_STATUS_COUNTERResult>> SP_ORDER_STATUS_COUNTERAsync(DateTime? StartDate, DateTime? EndDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);

        Task<List<SP_DEPOSIT_WALLETResult>> SP_DEPOSIT_WALLETAsync(Guid? accountId, string walletCode, decimal? amount, string paymentCode, string paymentNote, DateTime? paymentDate, string document, Guid? createdById, string createdByName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);

        Task<List<SP_ORDER_UPDATE_BID_USERNAMEResult>> SP_ORDER_UPDATE_BID_USERNAMEAsync(Guid? id, string bidUsername, Guid? userId, string userName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);


        Task<List<SP_ORDER_UPDATE_ADD_TRACKINGResult>> SP_ORDER_UPDATE_ADD_TRACKINGAsync(
            Guid? id,
            string trackingNumber,
            string trackingCarrier,
            Guid? userId,
            string userName,
            OutputParameter<int> returnValue = null,
            CancellationToken cancellationToken = default);


        Task<List<SP_ORDER_UPDATE_TRACKINGResult>> SP_ORDER_UPDATE_TRACKINGAsync(
            Guid? id,
            string trackingNumber,
            string trackingCarrier,
            int domesticStatus,
            Guid? userId,
            string userName,
            OutputParameter<int> returnValue = null,
            CancellationToken cancellationToken = default);

        Task<List<SP_ORDER_UPDATE_DOMESTIC_DELIVERRY_STATUSResult>> SP_ORDER_UPDATE_DOMESTIC_DELIVERRY_STATUSAsync(
            Guid? id,
            int? domesticStatus,
            Guid? userId,
            string userName,
            NetDevPack.Domain.OutputParameter<int> returnValue = null,
            CancellationToken cancellationToken = default);

        
        Task<List<SP_ORDER_UPDATE_SHIPMENT_ROUTINGResult>> SP_ORDER_UPDATE_SHIPMENT_ROUTINGAsync(
            Guid? id,
            string? shipmentRouting,
            Guid? userId,
            string userName,
            OutputParameter<int> returnValue = null,
            CancellationToken cancellationToken = default);

        Task<List<SP_ORDER_UPDATE_NOTEResult>> SP_ORDER_UPDATE_NOTEAsync(
            Guid? id,
            string? note,
            Guid? userId,
            string userName,
            OutputParameter<int> returnValue = null,
            CancellationToken cancellationToken = default);

        public Task<List<SP_ORDER_UPDATE_DOMESTIC_DELIVERYResult>> SP_ORDER_UPDATE_DOMESTIC_DELIVERYAsync(
            Guid? id,
            DateTime? domesticDeliveryDate,
            int? domesticStatus,
            Guid? userId,
            string userName,
            NetDevPack.Domain.OutputParameter<int> returnValue = null,
            CancellationToken cancellationToken = default);

    }
}
